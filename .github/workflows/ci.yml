name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    runs-on: ubuntu-22.04
    name: Lint
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Lint
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        run: pnpm run lint

  format:
    runs-on: ubuntu-22.04
    name: Format
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Check formatting
        run: pnpm run format:check

  typecheck:
    runs-on: ubuntu-22.04
    name: Check types
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Check types
        run: pnpm run typecheck

  test:
    runs-on: ubuntu-22.04
    name: Test
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Test
        id: test
        run: pnpm run test:coverage
      - name: Upload coverage report
        if: ${{ !cancelled() && (steps.test.conclusion == 'success' || steps.test.conclusion == 'failure') }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  build:
    runs-on: ubuntu-22.04
    name: Build
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Update i18n files
        working-directory: packages/intl
        env:
          LOKALISE_API_TOKEN: ${{ secrets.LOKALISE_API_TOKEN }}
          LOKALISE_PROJECT_ID_MGO_APP: ${{ secrets.LOKALISE_PROJECT_ID_MGO_APP }}
          LOKALISE_PROJECT_ID_MGO_FHIR: ${{ secrets.LOKALISE_PROJECT_ID_MGO_FHIR }}
        run: pnpm run messages:update
      - name: Build
        run: pnpm exec nx run @minvws/mgo:build

  sonar:
    runs-on: ubuntu-22.04
    needs: test
    name: Run SonarCloud scanner
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: 'Download artifact: coverage'
        uses: actions/download-artifact@v5
        with:
          name: coverage
          path: coverage
      - name: Run SonarQube scan
        uses: minvws/action-sonarqube@v1
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
